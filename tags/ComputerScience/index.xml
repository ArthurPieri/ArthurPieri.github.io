<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ComputerScience on</title><link>https://pieri.io/tags/ComputerScience/</link><description>Recent content in ComputerScience on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pieri.io/tags/ComputerScience/index.xml" rel="self" type="application/rss+xml"/><item><title>_BigO notation</title><link>https://pieri.io/_BigO-notation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_BigO-notation/</guid><description/></item><item><title>_Clang - Graphs</title><link>https://pieri.io/_Clang-Graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-Graphs/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - Hash Tables</title><link>https://pieri.io/_Clang-Hash-Tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-Hash-Tables/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - linked lists</title><link>https://pieri.io/_Clang-linked-lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-linked-lists/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - queues</title><link>https://pieri.io/_Clang-queues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-queues/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - stacks</title><link>https://pieri.io/_Clang-stacks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-stacks/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - trees</title><link>https://pieri.io/_Clang-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-trees/</guid><description>#clang #data-engineering #ComputerScience
Types of Trees [[Binary Search Tree]] Each node has at most 2 children The left child is less than the parent The right child is greater than the parent No duplicates [[AVL Tree]] Self-balancing binary search tree The height of left and right subtrees of any node differ by at most 1 Insertion and deletion operations may cause the tree to become unbalanced [[Red-Black Tree]] Self-balancing binary search tree Each node is either red or black The root node is always black New nodes are always red No two adjacent red nodes Every path from a node to a null node has the same number of black nodes [[Balanced-Tree (B-tree)]] Self-balancing tree Each node can have more than 2 children Used in databases and file systems Each node contains a list of keys and a list of children Keys are sorted in ascending order Keys in the left child are less than the keys in the parent node Keys in the right child are greater than the keys in the parent node All leaves are at the same level [[B+ Tree]] Self-balancing tree Each node can have more than 2 children Used in databases and file systems Each node contains a list of keys and a list of children Keys are sorted in ascending order Keys in the left child are less than or equal to the keys in the parent node Keys in the right child are greater than the keys in the parent node All leaves are at the same level All keys are present in the leaf nodes Leaf nodes are linked together [[Splay Tree]] Self-balancing binary search tree Recently accessed nodes are moved closer to the root Used in caches and memory allocators</description></item><item><title>_Memory and memory allocation in C</title><link>https://pieri.io/_Memory-and-memory-allocation-in-C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Memory-and-memory-allocation-in-C/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_pointers in C_</title><link>https://pieri.io/_pointers-in-C_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_pointers-in-C_/</guid><description>#clang #data-engineering #ComputerScience
[[_Memory and memory allocation in C]]</description></item><item><title>_Software Engineering</title><link>https://pieri.io/_Software-Engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Software-Engineering/</guid><description/></item></channel></rss>