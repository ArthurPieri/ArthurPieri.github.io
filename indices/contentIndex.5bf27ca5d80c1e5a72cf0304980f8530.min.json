{"/":{"title":"Coding APie","content":"\n# Coding APie\n\nHere you will find everything from agile project management, passing through dev, DevOps, data, and maybe a little bit about IT Security\n\n- üêà‚Äç‚¨õ [Agile](https://pieri.io/tags/agile/)\n- üíª Coding\n- üóÑÔ∏è [Data Engineering](https://pieri.io/tags/data-engineering/)\n- üõ°Ô∏è IT Sec\n\n## Whoami\n\nMy name is Arthur Pieri, I'm a data engineer living in Brazil.\n","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":[]},"/98-economy-on-Data-lake":{"title":"99% economy on Data lake","content":"## The beginning\n\nOne day I was looking at some of the KPIs from our Data lake, we use a pretty \"standard\" stack with:\n\n- [[Snowflake]] is our data lake\n- [[Airflow]] to manage execution\n- [[Python]] with [[pandas]] to execute the ETL process\n\nThis stack was made by only one person on a really tight schedule, so we expected to have some places to optimize. And one day I was talking to a friend who said that he was able to cut costs from their Data Lake simply by changing a lot of processes  that were created with:\n\n```sql\nCREATE OR REPLACE TABLE xxxxx\n```\n\nAnd then I thought, if in bigger company things like that happened, then probably we would have some things like that in our own.\n\nSo we started looking and found one pipeline, where every table, was constructed with the infamous CREATE OR REPLACE.\n\n## Collecting data\n1. The first \"red flag, is that our fail-safe was way bigger than the actual database\n![[datalake_storage_before.png]]\n2. The other thing that caught our attention was the number of tables being created in a single pipeline: 26 and the mean time to run the pipeline that was close to 11 minutes, for a pipeline that runs every 30 minutes.\n\n## From top to bottom\n### The first step\nThe first thing we did after that, was to look at the most important and used table on the pipeline, which is one of those [[OTB]]. \nAfter gathering all columns, and finding where those columns came from, we found the second problem:\n- In the urge to follow a \"design pattern\", we were creating lots of useless tables. Ok, we had schemas that follow a pattern:\n\t- Transient\n\t- Raw\n\t- Trusted\n\t- Internal\n- The problem was we didn't need this, we were creating schemas and tables that did nothing to the data, and were just there, wasting storage and time.\n\n### The second step\nUnderstanding our source tables, and how to extract only the delta from them. This took some time, but nothing too complex.\n\n### The third step\nDocument everything!\n- What tables were created before\n- What tables were being created now\n- Were there any columns that were being left out?\n- Every schema removed got its own commit, so it would be easy to rollback if needed\n- Run tests\n\n### Finally\nWe made applied the changes in production and here are some of the improvements:\n- The mean total time to run the pipeline went from almost 11 minutes to around 6 minutes\n- The amount of data being written was cut down by 98% (From close to 700MB of data to around 10MB), remember it was being written every 30 minutes\n![[datalake_storage_half_way.png]]\n- Number of tables down from 26 to 11\n\n## Thoughts\n- Even though I am only presenting the biggest differences, we got some other changes that were less impressive, and yet extremely important, like a 52% reduction on our customer orders table.\n- And a sneak peek of the other big economy we made:\n![[datalake_storage_end.png]]\n\t- From 1.3TB to 550GB","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":["data-engineering","data"]},"/Agile-culture":{"title":"Agile culture","content":"#agile #agile-foundations \n\n# What is organizational culture?\n\nOrganizational Culture is a generic term used to describe the shared values within an organization. I suggest you read this article by [Harvard Business Review](https://hbr.org/2013/05/what-is-organizational-culture).\n\n\u003e ‚ÄúOrganizational culture defines a jointly shared description of an organization from within.‚Äù ‚Äî Bruce Perron\n\n## The role of \"The Organization\" in Agile\n\nAgile is a concept composed by many factors, among them there is the Organization. The main role of the organization is to ensure that the team is able to fulfill [[The History of agile#The Pillars]]:\n\n\u003e [!EXAMPLE]  Pillars\n\u003e\n\u003e - **Individuals and interactions** over processes and tools\n\u003e - **Working software** over comprehensive documentation\n\u003e - **Customer collaboration** over contract negotiation\n\u003e - **Responding to change** over following a plan\n\nAgile emerges from the Team, the Project, and the Stakeholders. Yet, without solid ground, there can be no success on any Agile project. \nThe organization is the one providing that solid base. Ensuring all the team member's safety to take risks and try new things without being blamed as guilty for a mistake.\n\nIt's important to understand what we are calling \"The organization\" because it is not only the formal entity and its partners, but every single person that works or helps the organization, it's about the individual commitment towards better results.\n\n## Agile Culture\n\nIt's easy to overlook culture in an [[agile team]]. When we focus only on the 3 to 9 people that are part of the core SCRUM team. Yet that is a terrible mistake, since for that team to be productive they need assistance from the organization, and help to stay dedicated and focused on the work to be done.\n\nWith that said, there are a few key values that compose an agile culture:\n\u003e [!EXAMPLE]  Key values\n\u003e\n\u003e - Encourage greater responsibility and teamwork. Allowing everyone to know the team's performance and ask for better results, with no hierarchy.\n\u003e - At the same time, allow more individual freedom, so each person can organize the way that fits them best.\n\u003e - Help the team gain more confidence in their work.\n\u003e - Build a solid understanding that the focus is on the Value delivered to the client and each one can choose their best way towards it.\n\u003e - Do not worry about time sheets only about deliveries. Everyone on the team must be able to have good time management.\n\nAgile culture is a change of paradigm. It completely changes the way we think and do people interactions (Team, clients, and stakeholders). When agile becomes the DNA of the organization everyone starts to work closer and more engaged in the pursuit of a common Ideal.\n\n## In a nutshell\n\n\u003e [!abstract] Summaries \n\u003e - Being agile is working to deliver value, not to follow detailed, rigid, and standardized planning or bureaucracy. \n\u003e - The main challenge is to build this Agile culture and not only start doing some practices or use some methods or tools.\n\u003e - Agile culture helps decisions be made faster and with a better understanding of the problem. \n\u003e - And achieve a well-served client, by happy and motivated people, ensures a healthy long-term relationship.\n","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":["agile","agile-foundations"]},"/Agile-culture-and-Growth":{"title":"Agile culture and Growth","content":"#agile #agile-foundations \n\n# Agile culture and Growth\n\nOne of the main benefits of the Agile culture is that it allows us to keep on learning. Keep trying to improve and not be afraid of possible mistakes (knowing that a mistake is a good improvement opportunity\n\nAgile is about learning, improvement, and growth. Is about you being able to adapt and reach your goals. It goes deeper and further than just attending courses, workshops, or training camps. It's about trying, failing, trying again, and keep moving forward. With the eyes on the prize (Value to the customer).\n\n## Goals and Learning\n\nDefining clear Goals and Objectives is a key part of the [[Agile culture]].\n\nWithout Goals and objectives, the team cannot self-organize. There is no planning and no way to learn from mistakes, after all, **What would be a mistake**?\n\n\u003e [!danger] Error\n\u003e  \n\u003e  \"If you don‚Äôt know where you‚Äôre going, any road will get you there.\" Lewis Carroll - Alice in Wonderland\n\nYou can learn more about goals by reading [[How to define Goals]].\n\n## Learning from past Success (and failures)\n\nThe other key part of the [[Agile culture]] is to always look back to previous [[projects]], [[sprints]], or attempts and dissect them, find out what you think could be better, and what should be kept.\n\nUnderstanding that even though the Agile Manifesto was crafted by Software engineers it was never about Software. It was always about people and finding what was best for the parties involved.\n\nEvery organization, therefore, must focus on providing an environment that allows for autonomy, trust, motivation, and meaningful relations.\n\nThere are an infinite number of ways to create this culture. One way to do it is by encouraging a management process that focuses on:\n\n- Inspection\n- Adaptation\n- Communication\n- Quick value delivery\n\n\u003e [!warning] Remember \n\u003e\n\u003e There is no best way to implement an agile culture, you just have to try it.","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":["agile","agile-foundations"]},"/Agile-why-should-you-care":{"title":"Agile, why should you care?","content":"#agile #agile-foundations\n\nIn the past decade, we've heard more and more about \"Agility\", \"[[Agile]]\", \"[[Scrum]]\" and some other ways we could grow past the Waterfall model.\n\n## What is Agile?\n\n[[Agile techniques]] exist between order and chaos. They don't demand complete order and everything working perfectly, just a clear, well-defined, [[Goal]]. Everything else can be adjusted at the right time.\n\nKnowing that [[agile]] seems to be the ideal way to manage projects that:\n\n- Have multiple ways to reach the final Goal;\n- Have no clear path towards the completion;\n- Have lots of external interference on results;\n- Are complex, and can have a number of outcomes that are valid.\n\n\u003e To help you understand, let's think of an example where Agile would be ideal (besides the use in [[software development]], since it is its primary use).\n\n## Example: Marketing APie\n\nA marketing agency wants to make a new campaign using \"memes\" to raise awareness of its Brand. They are trying to think of ways to make that happen and come up with two options\n\n### Traditional Management\n\nThey could use the traditional way to manage the project, so they would:\n\n1. Have a kick-off meeting;\n2. Research memes that are trending;\n3. Create a Project Plan;\n4. Ask if everyone agrees with the plan;\n5. Review feedback;\n6. Budget the plan;\n7. Ask for approval;\n8. Plan, step-by-step, all that is needed;\n9. Craft and validate the Project charter;\n10. Select each member of the team that fits the role needed;\n11. Only after all this, start working on the \"Dankest of all memes\".\n\nAs we can see, it took a long time to start working on the project, and by the time they start, all the planning would have gone to waste, since the \"meme world\" changes very fast, what they looked up last week is no longer trending, its \"outdated\".\n\n### Using Agile\n\nOn the other hand, by using an Agile approach we would:\n\n1. Define a set of metrics\n2. Select a handful of options, and launch them in a \"beta testing\" type of approach\n3. Keep track of the best performers\n4. Improve based on metrics\n5. Repeat\n\nBy using an Agile approach the company knows it needs to deploy an \"[[MVP]]\", a proof of concept as soon as possible, and keep improving on what performs best. And even though they may never launch a final version of the campaign, they would have collected data and reached out to many people in different ways.\n\nTherefore, in this example it's clear that the Agile approach is the best, but does it mean it is the best approach always?\n\nTo better understand Agile methods search for the tag #agile and read more about [[Agile culture]].\n","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":["agile","agile-foundations"]},"/Defining-Agile":{"title":"Defining Agile","content":"#agile #agile-foundations \n\nPreviously we've talked about [[Agile, why should you care?]]. But how can you care about something you don't understand what is?To solve that problem we are going to create a definition that will be used in my posts from now on.\n\n## Dictionary definition\nDefining agile can be tricky. If we look at the Dictionary definition it says: \n\u003e \"Characterized by quickness, lightness, and ease of movement; nimble.\"\n\nAnd maybe that's why the First Signatories of the [[Agile Manifesto]] decided to use this name. As a counterpoint to the traditional methods, and their need to control, which were extremely time-consuming and kept the team away from the true work: Developing software.\n\n## Project Management definition\nOn the Project Management side, the definition is still up for debate. But we can use what was published in: International Journal of Project Management, Volume 34, Issue 4, May 2016, Agile is a construct formed by 3 main factors:\n\n\u003e Agile must be seen as a result, it refers to the team's performance and not as an adjective for a specific method\n\u003e The Agile team performance is affected by a sum of [[Ability to change]] the [[Project Plan]] and the [[client's active involvement]] throughout the project.\n\u003e [[Agile]], as a [[Team performance indicator]], has different levels and must take into account both internal and external factors.\n\n## [The Agile Manifesto](http://agilemanifesto.org/history.html)\nThere is of course a few core principles that were created and defined in [[The History of agile]], and the agile manifesto.\n\n## Defining APie\nUsing what we learned so far we can agree with a simpler definition, that will be used in all the posts of this blog:\n\n\u003e [!note]  Definition\n\u003e\n\u003e \"Agile is a quality for [[the Project]],  [[the Team]]  and [[the Organization]]. And it must be present in the whole process. So we are working in an Agile Environment when:\n\u003e - The team can, frequently, deliver valuable features or products to the client;\n\u003e - The team can accept changes in the planning, as long as those changes drive us closer toward the Project goal;\n\u003e - The company (organization) provides the tools, inputs, requirements, and support so that the Team can work best and deliver the most \"Value\". \n\u003e - Understand that definition is key when trying to implement an Agile project. Since it needs full commitment from all the stakeholders and parties involved with the project.","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":["agile","agile-foundations"]},"/The-History-of-agile":{"title":"The History of agile","content":"\n#agile #agile-foundations\n\n## [The road to](http://agilemanifesto.org/history.html)\n\nIn the spring of 2000, a group of Leaders from the Software development and Management community gathered to discuss alternatives to the documentation-driven, heavyweight software development processes.\n\nThere were representatives from different perspectives like Extreme Programming, SCRUM, DSDM, Adaptive Software Development, Crystal, Feature-Driven Development, Pragmatic Programming, and others sympathetic to the need for change.\n\nAfter they realized that there was a common ground between those techniques and that it could be explored they scheduled a new meeting. In February 2001 the meeting happened with the Original Signatories (most of whom are still big respectable names in the industry to this day) and they wrote the first draft of the Manifesto.\n\nAfter some exchanges, they decided to change the name from Lightweight to something more meaningful, something that reflected their shared vision and showed what they were truly looking for: a more responsive, more [[Agile]] way to manage projects.\n\n## The Agile Manifesto\n\nWe are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:\n\n### The Pillars\n\n\u003e [!EXAMPLE] Pillars\n\u003e\n\u003e - **Individuals and interactions** over processes and tools\n\u003e - **Working software** over comprehensive documentation\n\u003e - **Customer collaboration** over contract negotiation\n\u003e - **Responding to change** over following a plan\n\u003e\n\u003e That is, while there is value in the items on the right, we value the items on the left more.\n\n## The 12 Principles\n\nWe follow these principles:\n\n1. Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n2. Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.\n3. Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\n4. Business people and developers must work together daily throughout the project.\n5. Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\n6. The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\n7. Working software is the primary measure of progress.\n8. Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\n9. Continuous attention to technical excellence and good design enhances agility.\n10. Simplicity--the art of maximizing the amount of work not done--is essential.\n11. The best architectures, requirements, and designs emerge from self-organizing teams.\n12. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\n\n## The road since\n\nEven though it was initially planned for and by Software developers the core principles and their applications have been proven useful in countless other contexts.\nAnd as time went on, people tried different experiments and applications and got increasingly better results. Therefore Agile has long surpassed Software development and became a useful tool in Project Management as a whole.\n","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":["agile","agile-foundations"]},"/tags/agile":{"title":"agile","content":"","lastmodified":"2023-03-17T04:56:22.117144858Z","tags":[]}}